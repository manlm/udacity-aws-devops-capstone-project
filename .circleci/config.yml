# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

jobs:
  lint:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-image:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Build Docker image
          command: |
            chmod +x ./docker/build.sh
            ./docker/build.sh

      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            chmod +x ./docker/push.sh
            ./docker/push.sh

  deploy-image:
    docker:
      - image: cimg/python:3.9
    steps:
      - run:
          name: Install kubectl
          command: |
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl
            sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl

      - run:
          name: Install AWS Command Line Interface package
          command: |
            pip install awscli

      - run:
          name: Get kubeconfig
          command: |
            aws eks update-kubeconfig --name capstone-cluster

      - run:
          name: Rollout the latest image
          command: kubectl rollout restart deployment.apps/demo-app-deployment

      - run:
          name: Tag the nodegroup instance with the pipeline id
          command: |
            InstanceId=$(aws ec2 describe-instances --query "Reservations[?Instances[?KeyName=='eksctl-capstone-cluster']]" | jq -r ".[].Instances[].InstanceId")
            aws ec2 create-tags --resources $InstanceId --tags Key=Name,Value="${CIRCLE_WORKFLOW_ID:0:7}"

workflows:
  default:
    jobs:
      - lint
      - build-image:
          requires: [ lint ]
      - deploy-image:
          requires: [ build-image ]